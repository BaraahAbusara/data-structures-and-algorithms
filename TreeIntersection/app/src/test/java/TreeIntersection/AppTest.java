/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package TreeIntersection;

import TreeIntersection.structure.BinarySearchTree;
import TreeIntersection.structure.TreeIntersection;
import org.junit.jupiter.api.Test;
import java.util.ArrayList;
import java.util.Collections;

import static org.junit.jupiter.api.Assertions.*;


class AppTest {
    @Test void NormalTest() {
        BinarySearchTree tree1 = new BinarySearchTree();
        BinarySearchTree tree2 = new BinarySearchTree();

        tree1.add(1);
        tree1.add(2);
        tree1.add(-5);
        tree1.add(5);
        tree1.add(4);
        tree1.add(7);
        tree1.add(7);


        tree2.add(1);
        tree2.add(1);
        tree2.add(5);
        tree2.add(-5);
        tree2.add(7);
        tree2.add(7);
        tree2.add(2);


        ArrayList<Integer> expected =  new ArrayList<>();
        expected.add(1);
        expected.add(-5);
        expected.add(2);
        expected.add(5);
        expected.add(7);

        TreeIntersection treeIntersection = new TreeIntersection();
        ArrayList<Integer> actual = treeIntersection.treeIntersection(tree1,tree2);
        Collections.sort(expected);
        Collections.sort(actual);
        assertEquals(expected,actual);


    }

    @Test
    void emptyTrees ()
    {

        BinarySearchTree tree1 = new BinarySearchTree();
        BinarySearchTree tree2 = new BinarySearchTree();
        TreeIntersection treeIntersection = new TreeIntersection();
        ArrayList<Integer> actual = treeIntersection.treeIntersection(tree1,tree2);
        ArrayList<Integer> expected =  new ArrayList<>();

        assertEquals(expected,actual);
    }
    @Test
    void oneEmptyTree ()
    {

        BinarySearchTree tree1 = new BinarySearchTree();
        tree1.add(4);
        tree1.add(5);
        BinarySearchTree tree2 = new BinarySearchTree();
        TreeIntersection treeIntersection = new TreeIntersection();
        ArrayList<Integer> actual = treeIntersection.treeIntersection(tree1,tree2);
        ArrayList<Integer> expected =  new ArrayList<>();

        assertEquals(expected,actual);
    }
}
